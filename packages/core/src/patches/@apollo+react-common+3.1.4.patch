diff --git a/node_modules/@apollo/react-common/lib/types/types.d.ts b/node_modules/@apollo/react-common/lib/types/types.d.ts
index 003f64e..b3b82a5 100644
--- a/node_modules/@apollo/react-common/lib/types/types.d.ts
+++ b/node_modules/@apollo/react-common/lib/types/types.d.ts
@@ -1,3 +1,4 @@
+import { TypedDocumentNode } from "@graphql-typed-document-node/core";
 import ApolloClient, { ApolloQueryResult, ApolloError, FetchPolicy, WatchQueryFetchPolicy, ErrorPolicy, FetchMoreOptions, FetchMoreQueryOptions, PureQueryOptions, MutationUpdaterFn, NetworkStatus, ObservableQuery } from 'apollo-client';
 import { DocumentNode, GraphQLError } from 'graphql';
 export declare type OperationVariables = Record<string, any>;
@@ -27,7 +28,7 @@ export interface QueryFunctionOptions<TData = any, TVariables = OperationVariabl
 }
 export declare type ObservableQueryFields<TData, TVariables> = Pick<ObservableQuery<TData, TVariables>, 'startPolling' | 'stopPolling' | 'subscribeToMore' | 'updateQuery' | 'refetch' | 'variables'> & {
     fetchMore: (<K extends keyof TVariables>(fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> & FetchMoreOptions<TData, TVariables>) => Promise<ApolloQueryResult<TData>>) & (<TData2, TVariables2, K extends keyof TVariables2>(fetchMoreOptions: {
-        query?: DocumentNode;
+        query?: DocumentNode | TypedDocumentNode<TData, TVariables>;
     } & FetchMoreQueryOptions<TVariables2, K> & FetchMoreOptions<TData2, TVariables2>) => Promise<ApolloQueryResult<TData2>>);
 };
 export interface QueryResult<TData = any, TVariables = OperationVariables> extends ObservableQueryFields<TData, TVariables> {
